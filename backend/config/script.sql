-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.batiment
(
    id_batiment serial NOT NULL,
    nom character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    demontable boolean NOT NULL DEFAULT false,
    CONSTRAINT batiment_pkey PRIMARY KEY (id_batiment)
);

CREATE TABLE IF NOT EXISTS public.campingpartenaire
(
    id_partenaire serial NOT NULL,
    nom character varying(100) COLLATE pg_catalog."default" NOT NULL,
    adresse text COLLATE pg_catalog."default" NOT NULL,
    remise numeric(5, 2) NOT NULL,
    CONSTRAINT campingpartenaire_pkey PRIMARY KEY (id_partenaire),
    CONSTRAINT campingpartenaire_nom_key UNIQUE (nom)
);

CREATE TABLE IF NOT EXISTS public.catamaran
(
    id_catamaran serial NOT NULL,
    nb_place integer NOT NULL,
    noequipement integer NOT NULL,
    CONSTRAINT catamaran_pkey PRIMARY KEY (id_catamaran)
);

CREATE TABLE IF NOT EXISTS public.client
(
    id_client serial NOT NULL,
    nom character varying(50) COLLATE pg_catalog."default" NOT NULL,
    prenom character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numero_tel character varying(15) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    piece_identite character varying(50) COLLATE pg_catalog."default" NOT NULL,
    id_partenaire integer,
    CONSTRAINT client_pkey PRIMARY KEY (id_client),
    CONSTRAINT client_email_key UNIQUE (email),
    CONSTRAINT client_numero_tel_key UNIQUE (numero_tel)
);

CREATE TABLE IF NOT EXISTS public.clientcours
(
    id_client integer NOT NULL,
    id_cours integer NOT NULL,
    date_inscription date NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT clientcours_pkey PRIMARY KEY (id_client, id_cours)
);

CREATE TABLE IF NOT EXISTS public.clientforfait
(
    id_client integer NOT NULL,
    id_forfait integer NOT NULL,
    date_achat date NOT NULL DEFAULT CURRENT_DATE,
    seances_restantes integer DEFAULT 0,
    CONSTRAINT clientforfait_pkey PRIMARY KEY (id_client, id_forfait)
);

CREATE TABLE IF NOT EXISTS public.compte
(
    identifiant serial NOT NULL,
    mot_de_passe character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_employe integer,
    id_client integer,
    CONSTRAINT compte_pkey PRIMARY KEY (identifiant),
    CONSTRAINT compte_id_client_key UNIQUE (id_client),
    CONSTRAINT compte_id_employe_key UNIQUE (id_employe)
);

CREATE TABLE IF NOT EXISTS public.concession
(
    id_concession serial NOT NULL,
    annee integer NOT NULL,
    autorisation boolean NOT NULL DEFAULT false,
    date_renouvellement date NOT NULL,
    CONSTRAINT concession_pkey PRIMARY KEY (id_concession)
);

CREATE TABLE IF NOT EXISTS public.contactmessages
(
    id serial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    subject character varying(255) COLLATE pg_catalog."default" NOT NULL,
    message text COLLATE pg_catalog."default" NOT NULL,
    date_submitted timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT contactmessages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cours
(
    id_cours serial NOT NULL,
    date date NOT NULL,
    heure time without time zone NOT NULL,
    niveau character varying(20) COLLATE pg_catalog."default" NOT NULL,
    duree interval DEFAULT '01:30:00'::interval,
    id_moniteur integer NOT NULL,
    id_creneau integer,
    nb_apprenants integer DEFAULT 0,
    CONSTRAINT cours_pkey PRIMARY KEY (id_cours)
);

CREATE TABLE IF NOT EXISTS public.coursequipement
(
    id_cours integer NOT NULL,
    noequipement integer NOT NULL,
    CONSTRAINT coursequipement_pkey PRIMARY KEY (id_cours, noequipement)
);

CREATE TABLE IF NOT EXISTS public.coursforfait
(
    id_cours integer NOT NULL,
    id_forfait integer NOT NULL,
    CONSTRAINT coursforfait_pkey PRIMARY KEY (id_cours, id_forfait)
);

CREATE TABLE IF NOT EXISTS public.creneau
(
    id_creneau serial NOT NULL,
    jour_semaine character varying(10) COLLATE pg_catalog."default" NOT NULL,
    heure_debut time without time zone NOT NULL,
    heure_fin time without time zone NOT NULL,
    niveau character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT creneau_pkey PRIMARY KEY (id_creneau)
);

CREATE TABLE IF NOT EXISTS public.disponibilite
(
    id_disponibilite serial NOT NULL,
    id_employe integer NOT NULL,
    date date NOT NULL,
    statut character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT disponibilite_pkey PRIMARY KEY (id_disponibilite)
);

CREATE TABLE IF NOT EXISTS public.employe
(
    id_employe serial NOT NULL,
    nom character varying(50) COLLATE pg_catalog."default" NOT NULL,
    prenom character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numero_tel character varying(15) COLLATE pg_catalog."default",
    date_naissance date,
    type_employe character varying(20) COLLATE pg_catalog."default" NOT NULL,
    permis_bateau boolean NOT NULL DEFAULT false,
    diplome character varying(100) COLLATE pg_catalog."default",
    niveau_associe character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT employe_pkey PRIMARY KEY (id_employe),
    CONSTRAINT employe_numero_tel_key UNIQUE (numero_tel)
);

CREATE TABLE IF NOT EXISTS public.equipement
(
    noequipement serial NOT NULL,
    disponibilite boolean NOT NULL DEFAULT true,
    statut character varying(20) COLLATE pg_catalog."default" NOT NULL,
    quantite_stock integer NOT NULL,
    id_location integer,
    type_equipement character varying(50) COLLATE pg_catalog."default" NOT NULL,
    capacite integer,
    volume numeric(6, 2),
    louable boolean DEFAULT true,
    moniteur_requis boolean DEFAULT false,
    quantite_max integer NOT NULL,
    CONSTRAINT equipement_pkey PRIMARY KEY (noequipement)
);

CREATE TABLE IF NOT EXISTS public.exigencesemployes
(
    type_employe character varying(20) COLLATE pg_catalog."default" NOT NULL,
    minimum_requis integer NOT NULL,
    CONSTRAINT exigencesemployes_pkey PRIMARY KEY (type_employe)
);

CREATE TABLE IF NOT EXISTS public.facture
(
    id_facture serial NOT NULL,
    montant numeric(10, 2) NOT NULL,
    date date NOT NULL,
    type_facture character varying(20) COLLATE pg_catalog."default" NOT NULL,
    numero_paiement integer,
    CONSTRAINT facture_pkey PRIMARY KEY (id_facture),
    CONSTRAINT facture_numero_paiement_key UNIQUE (numero_paiement)
);

CREATE TABLE IF NOT EXISTS public.flotteur
(
    id_flotteur serial NOT NULL,
    volume numeric(5, 2) NOT NULL,
    id_planche_voile integer,
    quantite_stock integer NOT NULL DEFAULT 0,
    quantite_max integer NOT NULL,
    CONSTRAINT flotteur_pkey PRIMARY KEY (id_flotteur),
    CONSTRAINT flotteur_id_planche_voile_key UNIQUE (id_planche_voile)
);

CREATE TABLE IF NOT EXISTS public.forfait
(
    id_forfait serial NOT NULL,
    type_forfait character varying(20) COLLATE pg_catalog."default" NOT NULL,
    prix numeric(6, 2) NOT NULL,
    CONSTRAINT forfait_pkey PRIMARY KEY (id_forfait)
);

CREATE TABLE IF NOT EXISTS public.horaireaccueil
(
    id_horaire serial NOT NULL,
    date date NOT NULL,
    heure_debut time without time zone NOT NULL,
    heure_fin time without time zone NOT NULL,
    id_employe1 integer NOT NULL,
    id_employe2 integer,
    CONSTRAINT horaireaccueil_pkey PRIMARY KEY (id_horaire)
);

CREATE TABLE IF NOT EXISTS public.location
(
    id_location serial NOT NULL,
    propositionetat character varying(50) COLLATE pg_catalog."default",
    heuresupp numeric(3, 1),
    id_client integer NOT NULL,
    id_promotion integer,
    heure_debut time without time zone NOT NULL,
    heure_fin time without time zone,
    CONSTRAINT location_pkey PRIMARY KEY (id_location)
);

CREATE TABLE IF NOT EXISTS public.locationtarif
(
    id_location integer NOT NULL,
    id_tarif integer NOT NULL,
    CONSTRAINT locationtarif_pkey PRIMARY KEY (id_location, id_tarif)
);

CREATE TABLE IF NOT EXISTS public.loueur
(
    id_employe integer NOT NULL,
    zone_responsabilite character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT loueur_pkey PRIMARY KEY (id_employe)
);

CREATE TABLE IF NOT EXISTS public.moniteur
(
    id_employe integer NOT NULL,
    paner_bateau boolean NOT NULL DEFAULT false,
    CONSTRAINT moniteur_pkey PRIMARY KEY (id_employe)
);

CREATE TABLE IF NOT EXISTS public.paddle
(
    id_paddle serial NOT NULL,
    volume numeric(5, 2) NOT NULL,
    noequipement integer NOT NULL,
    CONSTRAINT paddle_pkey PRIMARY KEY (id_paddle)
);

CREATE TABLE IF NOT EXISTS public.paiement
(
    numero_paiement serial NOT NULL,
    montant numeric(6, 2) NOT NULL,
    date date NOT NULL,
    moyen_de_paiement character varying(20) COLLATE pg_catalog."default" NOT NULL,
    id_client integer NOT NULL,
    CONSTRAINT paiement_pkey PRIMARY KEY (numero_paiement)
);

CREATE TABLE IF NOT EXISTS public.panne
(
    id_panne serial NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    date date NOT NULL,
    heure time without time zone NOT NULL,
    resolu boolean NOT NULL DEFAULT false,
    noequipement integer NOT NULL,
    id_employe_resolu integer,
    CONSTRAINT panne_pkey PRIMARY KEY (id_panne)
);

CREATE TABLE IF NOT EXISTS public.pedalo
(
    id_pedalo serial NOT NULL,
    nb_place integer NOT NULL,
    noequipement integer NOT NULL,
    CONSTRAINT pedalo_pkey PRIMARY KEY (id_pedalo)
);

CREATE TABLE IF NOT EXISTS public.pied_de_mat
(
    id_pied_de_mat serial NOT NULL,
    id_planche_voile integer,
    quantite_stock integer NOT NULL DEFAULT 0,
    quantite_max integer NOT NULL,
    CONSTRAINT pied_de_mat_pkey PRIMARY KEY (id_pied_de_mat),
    CONSTRAINT pied_de_mat_id_planche_voile_key UNIQUE (id_planche_voile)
);

CREATE TABLE IF NOT EXISTS public.planche_a_voile
(
    id_planche_voile serial NOT NULL,
    noequipement integer NOT NULL,
    CONSTRAINT planche_a_voile_pkey PRIMARY KEY (id_planche_voile)
);

CREATE TABLE IF NOT EXISTS public.promotion
(
    id_promotion serial NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    remise_percent numeric(5, 2) NOT NULL,
    date_debut date NOT NULL,
    date_fin date NOT NULL,
    CONSTRAINT promotion_pkey PRIMARY KEY (id_promotion)
);

CREATE TABLE IF NOT EXISTS public.proprietaire
(
    id_employe integer NOT NULL,
    privilege_gestion boolean NOT NULL DEFAULT false,
    CONSTRAINT proprietaire_pkey PRIMARY KEY (id_employe)
);

CREATE TABLE IF NOT EXISTS public.roletemporaire
(
    id_role serial NOT NULL,
    id_employe integer NOT NULL,
    role_temporaire character varying(50) COLLATE pg_catalog."default" NOT NULL,
    date_debut date NOT NULL,
    date_fin date,
    CONSTRAINT roletemporaire_pkey PRIMARY KEY (id_role)
);

CREATE TABLE IF NOT EXISTS public.tarif
(
    id_tarif serial NOT NULL,
    tarif_location numeric(6, 2) NOT NULL,
    tarif_heuresupp numeric(6, 2),
    date_debut date NOT NULL,
    date_fin date NOT NULL,
    duree_total interval,
    CONSTRAINT tarif_pkey PRIMARY KEY (id_tarif)
);

CREATE TABLE IF NOT EXISTS public.tarifequipement
(
    id_tarif serial NOT NULL,
    type_equipement character varying(50) COLLATE pg_catalog."default" NOT NULL,
    duree_intervalle character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tarif numeric(6, 2) NOT NULL,
    CONSTRAINT tarifequipement_pkey PRIMARY KEY (id_tarif)
);

CREATE TABLE IF NOT EXISTS public.voile
(
    id_voile serial NOT NULL,
    surface numeric(5, 2) NOT NULL,
    id_planche_voile integer,
    quantite_stock integer NOT NULL DEFAULT 0,
    quantite_max integer NOT NULL,
    CONSTRAINT voile_pkey PRIMARY KEY (id_voile),
    CONSTRAINT voile_id_planche_voile_key UNIQUE (id_planche_voile)
);

ALTER TABLE IF EXISTS public.catamaran
    ADD CONSTRAINT catamaran_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.client
    ADD CONSTRAINT client_id_partenaire_fkey FOREIGN KEY (id_partenaire)
    REFERENCES public.campingpartenaire (id_partenaire) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientcours
    ADD CONSTRAINT clientcours_id_client_fkey FOREIGN KEY (id_client)
    REFERENCES public.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientcours
    ADD CONSTRAINT clientcours_id_cours_fkey FOREIGN KEY (id_cours)
    REFERENCES public.cours (id_cours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientforfait
    ADD CONSTRAINT clientforfait_id_client_fkey FOREIGN KEY (id_client)
    REFERENCES public.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientforfait
    ADD CONSTRAINT clientforfait_id_forfait_fkey FOREIGN KEY (id_forfait)
    REFERENCES public.forfait (id_forfait) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.compte
    ADD CONSTRAINT compte_id_client_fkey FOREIGN KEY (id_client)
    REFERENCES public.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS compte_id_client_key
    ON public.compte(id_client);


ALTER TABLE IF EXISTS public.compte
    ADD CONSTRAINT compte_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS compte_id_employe_key
    ON public.compte(id_employe);


ALTER TABLE IF EXISTS public.cours
    ADD CONSTRAINT cours_id_creneau_fkey FOREIGN KEY (id_creneau)
    REFERENCES public.creneau (id_creneau) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cours
    ADD CONSTRAINT cours_id_moniteur_fkey FOREIGN KEY (id_moniteur)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.coursequipement
    ADD CONSTRAINT coursequipement_id_cours_fkey FOREIGN KEY (id_cours)
    REFERENCES public.cours (id_cours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.coursequipement
    ADD CONSTRAINT coursequipement_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.coursforfait
    ADD CONSTRAINT coursforfait_id_cours_fkey FOREIGN KEY (id_cours)
    REFERENCES public.cours (id_cours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.coursforfait
    ADD CONSTRAINT coursforfait_id_forfait_fkey FOREIGN KEY (id_forfait)
    REFERENCES public.forfait (id_forfait) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disponibilite
    ADD CONSTRAINT disponibilite_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.equipement
    ADD CONSTRAINT equipement_id_location_fkey FOREIGN KEY (id_location)
    REFERENCES public.location (id_location) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.facture
    ADD CONSTRAINT facture_numero_paiement_fkey FOREIGN KEY (numero_paiement)
    REFERENCES public.paiement (numero_paiement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS facture_numero_paiement_key
    ON public.facture(numero_paiement);


ALTER TABLE IF EXISTS public.flotteur
    ADD CONSTRAINT flotteur_id_planche_voile_fkey FOREIGN KEY (id_planche_voile)
    REFERENCES public.planche_a_voile (id_planche_voile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS flotteur_id_planche_voile_key
    ON public.flotteur(id_planche_voile);


ALTER TABLE IF EXISTS public.horaireaccueil
    ADD CONSTRAINT horaireaccueil_id_employe1_fkey FOREIGN KEY (id_employe1)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horaireaccueil
    ADD CONSTRAINT horaireaccueil_id_employe2_fkey FOREIGN KEY (id_employe2)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.location
    ADD CONSTRAINT location_id_client_fkey FOREIGN KEY (id_client)
    REFERENCES public.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.location
    ADD CONSTRAINT location_id_promotion_fkey FOREIGN KEY (id_promotion)
    REFERENCES public.promotion (id_promotion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.locationtarif
    ADD CONSTRAINT locationtarif_id_location_fkey FOREIGN KEY (id_location)
    REFERENCES public.location (id_location) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.locationtarif
    ADD CONSTRAINT locationtarif_id_tarif_fkey FOREIGN KEY (id_tarif)
    REFERENCES public.tarif (id_tarif) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.loueur
    ADD CONSTRAINT loueur_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS loueur_pkey
    ON public.loueur(id_employe);


ALTER TABLE IF EXISTS public.moniteur
    ADD CONSTRAINT moniteur_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS moniteur_pkey
    ON public.moniteur(id_employe);


ALTER TABLE IF EXISTS public.paddle
    ADD CONSTRAINT paddle_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.paiement
    ADD CONSTRAINT paiement_id_client_fkey FOREIGN KEY (id_client)
    REFERENCES public.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.panne
    ADD CONSTRAINT panne_id_employe_resolu_fkey FOREIGN KEY (id_employe_resolu)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.panne
    ADD CONSTRAINT panne_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedalo
    ADD CONSTRAINT pedalo_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pied_de_mat
    ADD CONSTRAINT pied_de_mat_id_planche_voile_fkey FOREIGN KEY (id_planche_voile)
    REFERENCES public.planche_a_voile (id_planche_voile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS pied_de_mat_id_planche_voile_key
    ON public.pied_de_mat(id_planche_voile);


ALTER TABLE IF EXISTS public.planche_a_voile
    ADD CONSTRAINT planche_a_voile_noequipement_fkey FOREIGN KEY (noequipement)
    REFERENCES public.equipement (noequipement) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.proprietaire
    ADD CONSTRAINT proprietaire_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS proprietaire_pkey
    ON public.proprietaire(id_employe);


ALTER TABLE IF EXISTS public.roletemporaire
    ADD CONSTRAINT roletemporaire_id_employe_fkey FOREIGN KEY (id_employe)
    REFERENCES public.employe (id_employe) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.voile
    ADD CONSTRAINT voile_id_planche_voile_fkey FOREIGN KEY (id_planche_voile)
    REFERENCES public.planche_a_voile (id_planche_voile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS voile_id_planche_voile_key
    ON public.voile(id_planche_voile);

END;